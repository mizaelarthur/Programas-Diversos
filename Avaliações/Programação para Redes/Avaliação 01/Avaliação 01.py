# -*- coding: utf-8 -*-
"""2022.2-PRedes-Atividade_Avaliativa_3_Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-dg5qIl00JquMs6_ILHbx9HoYM4gENDp

# Programação para Redes
# Atidade avaliativa 3 - 2022.2 - Revisão de Python

**Instruções - LEIA COM ATENÇÃO**:

LEIA COM ATENÇÃO:

1) Essa atividade consiste em desenvolver programas em Python;

2) Você está sendo avaliado sobre Python e suas interações com programação redes;

3) Você poderá desenvolver os programas no ambiente que desejar, MAS ...

DEVE FAZER UMA CÓPIA DO GOOGLE COLAB em apêndice, COLAR O CÓDIGO REFERENTE A CADA QUESTÃO no respectivo espaço logo depois do enunciado e ENTREGAR SEU ARQUIVO COMO RESPOSTA. JAMAIS MANDE LINKs. MANDE O PRÓPRIO ARQUIVO.

4) Você deve fazer muitos comentários no seu código, isso facilita a correção e é critério de avaliação;

5) Você pode desenvolver as questões com MAIS um colega. Nesse caso, APENAS um deve entregar e comentar em negrito no início do Colab quem são os membros do grupo. Caso mais de um entregue, o primeiro corrigido será a nota de todos do grupo;

6) Você (e/ou seu colega) poderá ser questionado sobre o desenvolvimento das questões durante os momentos síncronos.

**DIGITE AQUI O NOME E MATRÍCULA DOS ALUNOS**

**Aluno 1:**

**Aluno 2:**

1) o arquivo “try_on-2017-11-13.txt” (em anexo), apresenta um *log* de um servidor de HTTP que foi atacado. A descrição dos campos está na primeira linha do arquivo. Responda às seguintes questões, implementando cada uma delas como uma função em Python.

> a) Em que momento (data/hora/minuto/segundo) houve mais tentativas de ataques? <br>
> b) De qual IP partiu o maior número de tentativas de ataque?<br>
> c) Apresente uma lista (em ordem decrescente) das cinco “páginas” mais requisitadas ao servidor. <br>
> d) Qual o navegador foi mais usado nos pedidos (não conte o navegador -)? <br>
> e) Quantas “páginas” não foram atendidas pelo servidor? <br>
"""

# Este programa responde à questão 1

"""2) Faça um programa que lê o nome de um arquivo qualquer (usuário informa o nome), aplica uma cifra 'xor' em cada byte dele. O valor do 'xor' é o código ASCII de cada uma das letras de uma palavra informada pelo usuário; por exemplo, se a palavra for 'pato', o primeiro byte do arquivo é cifrado com o código do 'p', o segundo com o código do 'a' e assim sucessivamente, o quinto byte é cifrado usando o código do 'p' novamente, e o processo se repete. Ao final gere um novo arquivo cujo nome é nome original acrescido de '.enc'. O original deve ser apagado.
 
Dica: para obter o código ASCII de uma letra, use ord(letra). Exemplo ord('A') -> 65.
"""

# Este programa responde à questão 2

"""3) Faça um programa que decifra o arquivo gerado na questão 2. O nome do novo arquivo cifrado e a palavra chave são informados pelo usuário. A extensão '.enc' deve ser retirada (se existir) do arquivo decifrado. O arquivo  cifrado deve ser apagado."""

# Este programa responde à questão 3

"""4) Em anexo, há um arquivo denominado serie *serie_historica_anp.zip*. Descompacte-o em um diretório de sua escolha. A seguir faça um programa que leia todos os arquivos com extensão .csv nesse diretório e respondapara cada ano, indique os três postos (com suas bandeiras) que venderam o mesmo produto mais barato. Exemplo.

            2017;GNV
                PostoX 4.12 PETROBRAS DISTRIBUIDORA S.A.
                PostoY 4.15 RAIZEN
                PostoZ 4.27 ALE
            2017;GASOLINA
                PostoK 5.25 RAIZEN
                PostoL 5.42 SHELL
                PostoM 5.76 BRANCA
            2017;DIESEL
                PostoX 4.37 BR
                PostoA 4.89 SHELL
                PostoC 5.76 BR
            2017; <outros produtos>
            ...
            Repetir para os demais anos 
*

Não se limite a ler apenas os arquivos resultado da decompactação, varra o diretório e processe todos os arquivos .csv, pois novos podem ser adicionados pelo professor durante os testes).  
"""

# Este programa responde à questão 4